<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.bec.cloud.baodanxitong.web.customer.dao.CustSettleAccountMapper">
	<resultMap id="BaseResultMap"
		type="com.bec.cloud.baodanxitong.web.customer.model.CustSettleAccount">
		<id column="account_id" property="accountId" jdbcType="BIGINT" />
		<result column="cust_id" property="custId" jdbcType="BIGINT" />
		<result column="account_type" property="accountType" jdbcType="INTEGER" />
		<result column="gopenbank_id" property="gopenbankId" jdbcType="VARCHAR" />
		<result column="gaccount_name" property="gaccountName"
			jdbcType="VARCHAR" />
		<result column="gaccount_no" property="gaccountNo" jdbcType="VARCHAR" />
		<result column="account_open_permit_path" property="accountOpenPermitPath"
			jdbcType="VARCHAR" />
		<result column="sopenbank_id" property="sopenbankId" jdbcType="VARCHAR" />
		<result column="saccount_name" property="saccountName"
			jdbcType="VARCHAR" />
		<result column="saccount_no" property="saccountNo" jdbcType="VARCHAR" />
		<result column="audit_status" property="auditStatus" jdbcType="INTEGER" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="del_status" property="delStatus" jdbcType="INTEGER" />
		<result column="change_status" property="changeStatus"
			jdbcType="INTEGER" />
		<result column="record_time" property="recordTime" jdbcType="DATE" />
		<result column="entry_user_id" property="entryUserId" jdbcType="BIGINT" />
		<result column="operation_user_id" property="operationUserId"
			jdbcType="BIGINT" />
		<result column="operation_time" property="operationTime"
			jdbcType="DATE" />
		<result column="bank_card_face_path" property="bankCardFacePath"
			jdbcType="VARCHAR" />
		<result column="bank_card_back_path" property="bankCardBackPath"
			jdbcType="VARCHAR" />
		<result column="gopenbank" property="gopenbank" jdbcType="VARCHAR" />
		<result column="sopenbank" property="sopenbank" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		account_id, cust_id, account_type, gopenbank_id, gaccount_name, gaccount_no,
		account_open_permit_path, sopenbank_id, saccount_name, saccount_no,
		audit_status,
		remark, del_status, change_status, record_time, entry_user_id,
		operation_user_id,
		operation_time, bank_card_face_path, bank_card_back_path, gopenbank, sopenbank
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from public.cust_settle_account
		where account_id = #{accountId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from public.cust_settle_account
		where account_id = #{accountId,jdbcType=BIGINT}
	</delete>
	<insert id="insert"
		parameterType="com.bec.cloud.baodanxitong.web.customer.model.CustSettleAccount">
		<selectKey resultType="java.lang.Long" keyProperty="accountId"
			order="BEFORE">
			select nextval('cust_settle_account_account_id_seq')
		</selectKey>
		insert into public.cust_settle_account (account_id, cust_id,
		account_type,
		gopenbank_id, gaccount_name, gaccount_no,
		account_open_permit_path, sopenbank_id, saccount_name,
		saccount_no, audit_status, remark,
		del_status, change_status, record_time,
		entry_user_id, operation_user_id, operation_time,
		bank_card_face_path, bank_card_back_path, gopenbank,
		sopenbank)
		values (#{accountId,jdbcType=BIGINT}, #{custId,jdbcType=BIGINT},
		#{accountType,jdbcType=INTEGER},
		#{gopenbankId,jdbcType=VARCHAR}, #{gaccountName,jdbcType=VARCHAR}, #{gaccountNo,jdbcType=VARCHAR},
		#{accountOpenPermitPath,jdbcType=VARCHAR},
		#{sopenbankId,jdbcType=VARCHAR}, #{saccountName,jdbcType=VARCHAR},
		#{saccountNo,jdbcType=VARCHAR}, #{auditStatus,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR},
		#{delStatus,jdbcType=INTEGER}, #{changeStatus,jdbcType=INTEGER}, #{recordTime,jdbcType=DATE},
		#{entryUserId,jdbcType=BIGINT}, #{operationUserId,jdbcType=BIGINT},
		#{operationTime,jdbcType=DATE},
		#{bankCardFacePath,jdbcType=VARCHAR}, #{bankCardBackPath,jdbcType=VARCHAR}, #{gopenbank,jdbcType=VARCHAR},
		#{sopenbank,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.bec.cloud.baodanxitong.web.customer.model.CustSettleAccount">
		<selectKey resultType="java.lang.Long" keyProperty="accountId"
			order="BEFORE">
			select nextval('cust_settle_account_account_id_seq')
		</selectKey>
		insert into public.cust_settle_account
		<trim prefix="(" suffix=")" suffixOverrides=",">
			account_id,
			<if test="custId != null">
				cust_id,
			</if>
			<if test="accountType != null">
				account_type,
			</if>
			<if test="gopenbankId != null">
				gopenbank_id,
			</if>
			<if test="gaccountName != null">
				gaccount_name,
			</if>
			<if test="gaccountNo != null">
				gaccount_no,
			</if>
			<if test="accountOpenPermitPath != null">
				account_open_permit_path,
			</if>
			<if test="sopenbankId != null">
				sopenbank_id,
			</if>
			<if test="saccountName != null">
				saccount_name,
			</if>
			<if test="saccountNo != null">
				saccount_no,
			</if>
			<if test="auditStatus != null">
				audit_status,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="delStatus != null">
				del_status,
			</if>
			<if test="changeStatus != null">
				change_status,
			</if>
			<if test="recordTime != null">
				record_time,
			</if>
			<if test="entryUserId != null">
				entry_user_id,
			</if>
			<if test="operationUserId != null">
				operation_user_id,
			</if>
			<if test="operationTime != null">
				operation_time,
			</if>
			<if test="bankCardFacePath != null">
				bank_card_face_path,
			</if>
			<if test="bankCardBackPath != null">
				bank_card_back_path,
			</if>
			<if test="gopenbank != null">
				gopenbank,
			</if>
			<if test="sopenbank != null">
				sopenbank,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{accountId,jdbcType=BIGINT},
			<if test="custId != null">
				#{custId,jdbcType=BIGINT},
			</if>
			<if test="accountType != null">
				#{accountType,jdbcType=INTEGER},
			</if>
			<if test="gopenbankId != null">
				#{gopenbankId,jdbcType=VARCHAR},
			</if>
			<if test="gaccountName != null">
				#{gaccountName,jdbcType=VARCHAR},
			</if>
			<if test="gaccountNo != null">
				#{gaccountNo,jdbcType=VARCHAR},
			</if>
			<if test="accountOpenPermitPath != null">
				#{accountOpenPermitPath,jdbcType=VARCHAR},
			</if>
			<if test="sopenbankId != null">
				#{sopenbankId,jdbcType=VARCHAR},
			</if>
			<if test="saccountName != null">
				#{saccountName,jdbcType=VARCHAR},
			</if>
			<if test="saccountNo != null">
				#{saccountNo,jdbcType=VARCHAR},
			</if>
			<if test="auditStatus != null">
				#{auditStatus,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="delStatus != null">
				#{delStatus,jdbcType=INTEGER},
			</if>
			<if test="changeStatus != null">
				#{changeStatus,jdbcType=INTEGER},
			</if>
			<if test="recordTime != null">
				#{recordTime,jdbcType=DATE},
			</if>
			<if test="entryUserId != null">
				#{entryUserId,jdbcType=BIGINT},
			</if>
			<if test="operationUserId != null">
				#{operationUserId,jdbcType=BIGINT},
			</if>
			<if test="operationTime != null">
				#{operationTime,jdbcType=DATE},
			</if>
			<if test="bankCardFacePath != null">
				#{bankCardFacePath,jdbcType=VARCHAR},
			</if>
			<if test="bankCardBackPath != null">
				#{bankCardBackPath,jdbcType=VARCHAR},
			</if>
			<if test="gopenbank != null">
				#{gopenbank,jdbcType=VARCHAR},
			</if>
			<if test="sopenbank != null">
				#{sopenbank,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.bec.cloud.baodanxitong.web.customer.model.CustSettleAccount">
		update public.cust_settle_account
		<set>
			<if test="custId != null">
				cust_id = #{custId,jdbcType=BIGINT},
			</if>
			<if test="accountType != null">
				account_type = #{accountType,jdbcType=INTEGER},
			</if>
			<if test="gopenbankId != null">
				gopenbank_id = #{gopenbankId,jdbcType=VARCHAR},
			</if>
			<if test="gaccountName != null">
				gaccount_name = #{gaccountName,jdbcType=VARCHAR},
			</if>
			<if test="gaccountNo != null">
				gaccount_no = #{gaccountNo,jdbcType=VARCHAR},
			</if>
			<if test="accountOpenPermitPath != null">
				account_open_permit_path = #{accountOpenPermitPath,jdbcType=VARCHAR},
			</if>
			<if test="sopenbankId != null">
				sopenbank_id = #{sopenbankId,jdbcType=VARCHAR},
			</if>
			<if test="saccountName != null">
				saccount_name = #{saccountName,jdbcType=VARCHAR},
			</if>
			<if test="saccountNo != null">
				saccount_no = #{saccountNo,jdbcType=VARCHAR},
			</if>
			<if test="auditStatus != null">
				audit_status = #{auditStatus,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="delStatus != null">
				del_status = #{delStatus,jdbcType=INTEGER},
			</if>
			<if test="changeStatus != null">
				change_status = #{changeStatus,jdbcType=INTEGER},
			</if>
			<if test="recordTime != null">
				record_time = #{recordTime,jdbcType=DATE},
			</if>
			<if test="entryUserId != null">
				entry_user_id = #{entryUserId,jdbcType=BIGINT},
			</if>
			<if test="operationUserId != null">
				operation_user_id = #{operationUserId,jdbcType=BIGINT},
			</if>
			<if test="operationTime != null">
				operation_time = #{operationTime,jdbcType=DATE},
			</if>
			<if test="bankCardFacePath != null">
				bank_card_face_path = #{bankCardFacePath,jdbcType=VARCHAR},
			</if>
			<if test="bankCardBackPath != null">
				bank_card_back_path = #{bankCardBackPath,jdbcType=VARCHAR},
			</if>
			<if test="gopenbank != null">
				gopenbank = #{gopenbank,jdbcType=VARCHAR},
			</if>
			<if test="sopenbank != null">
				sopenbank = #{sopenbank,jdbcType=VARCHAR},
			</if>
		</set>
		where account_id = #{accountId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.bec.cloud.baodanxitong.web.customer.model.CustSettleAccount">
		update public.cust_settle_account
		set cust_id = #{custId,jdbcType=BIGINT},
		account_type = #{accountType,jdbcType=INTEGER},
		gopenbank_id = #{gopenbankId,jdbcType=VARCHAR},
		gaccount_name = #{gaccountName,jdbcType=VARCHAR},
		gaccount_no = #{gaccountNo,jdbcType=VARCHAR},
		account_open_permit_path = #{accountOpenPermitPath,jdbcType=VARCHAR},
		sopenbank_id = #{sopenbankId,jdbcType=VARCHAR},
		saccount_name = #{saccountName,jdbcType=VARCHAR},
		saccount_no = #{saccountNo,jdbcType=VARCHAR},
		audit_status = #{auditStatus,jdbcType=INTEGER},
		remark = #{remark,jdbcType=VARCHAR},
		del_status = #{delStatus,jdbcType=INTEGER},
		change_status = #{changeStatus,jdbcType=INTEGER},
		record_time = #{recordTime,jdbcType=DATE},
		entry_user_id = #{entryUserId,jdbcType=BIGINT},
		operation_user_id = #{operationUserId,jdbcType=BIGINT},
		operation_time = #{operationTime,jdbcType=DATE},
		bank_card_face_path = #{bankCardFacePath,jdbcType=VARCHAR},
		bank_card_back_path = #{bankCardBackPath,jdbcType=VARCHAR},
		gopenbank = #{gopenbank,jdbcType=VARCHAR},
		sopenbank = #{sopenbank,jdbcType=VARCHAR}
		where account_id = #{accountId,jdbcType=BIGINT}
	</update>

	<select id="selectCustSettleAccounts" resultMap="BaseResultMap"
		parameterType="com.bec.cloud.baodanxitong.web.customer.model.CustSettleAccount">
		select
		<include refid="Base_Column_List" />
		from public.cust_settle_account
		where 1=1
		<!-- 条件待定 -->
	</select>
</mapper>