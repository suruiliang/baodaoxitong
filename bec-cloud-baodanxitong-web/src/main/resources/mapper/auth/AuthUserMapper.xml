<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bec.cloud.baodanxitong.web.auth.dao.AuthUserMapper">
	<resultMap id="BaseResultMap"
		type="com.bec.cloud.baodanxitong.web.auth.model.AuthUser">
		<id column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="cust_code" property="custCode" jdbcType="VARCHAR" />
		<result column="org_code" property="orgCode" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_old_name" property="userOldName" jdbcType="VARCHAR" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="user_passwd" property="userPasswd" jdbcType="VARCHAR" />
		<result column="user_identity" property="userIdentity"
			jdbcType="VARCHAR" />
		<result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
		<result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
		<result column="user_status" property="userStatus" jdbcType="INTEGER" />
		<result column="del_status" property="delStatus" jdbcType="INTEGER" />
		<result column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
		<result column="entry_user_id" property="entryUserId" jdbcType="BIGINT" />
		<result column="operation_user_id" property="operationUserId"
			jdbcType="BIGINT" />
		<result column="opretion_time" property="opretionTime"
			jdbcType="TIMESTAMP" />
		<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="user_type" property="userType" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="DetailResultMap"
		type="com.bec.cloud.baodanxitong.web.auth.model.AuthUser">
		<id column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="cust_code" property="custCode" jdbcType="VARCHAR" />
		<result column="org_code" property="orgCode" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_old_name" property="userOldName" jdbcType="VARCHAR" />
		<result column="real_name" property="realName" jdbcType="VARCHAR" />
		<result column="user_passwd" property="userPasswd" jdbcType="VARCHAR" />
		<result column="user_identity" property="userIdentity"
			jdbcType="VARCHAR" />
		<result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
		<result column="login_time" property="loginTime" jdbcType="TIMESTAMP" />
		<result column="user_status" property="userStatus" jdbcType="INTEGER" />
		<result column="del_status" property="delStatus" jdbcType="INTEGER" />
		<result column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
		<result column="entry_user_id" property="entryUserId" jdbcType="BIGINT" />
		<result column="operation_user_id" property="operationUserId"
			jdbcType="BIGINT" />
		<result column="opretion_time" property="opretionTime"
			jdbcType="TIMESTAMP" />
		<result column="user_phone" property="userPhone" jdbcType="VARCHAR" />
		<result column="user_type" property="userType" jdbcType="INTEGER" />
		<!-- add2response -->
		<result column="userStatusName" property="userStatusName"
			jdbcType="VARCHAR" />
		<result column="roleNames" property="roleNames" jdbcType="VARCHAR" />
		<result column="searchName" property="searchName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, cust_code, org_code, user_name, user_old_name,
		real_name,
		user_passwd, user_identity,
		login_ip, login_time,
		user_status, del_status, record_time, entry_user_id,
		operation_user_id,
		opretion_time, user_phone, user_type
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from public.auth_user
		where user_id = #{userId,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		public.auth_user
		where user_id = #{userId,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.bec.cloud.baodanxitong.web.auth.model.AuthUser">
		<selectKey keyProperty="userId" order="BEFORE" resultType="java.lang.Long">
			select nextval('auth_user_id_seq')
		</selectKey>
		insert into public.auth_user
		(user_id, cust_code, org_code,
		user_name,
		user_old_name, real_name,
		user_passwd, user_identity, login_ip,
		login_time, user_status,
		del_status,
		record_time, entry_user_id,
		operation_user_id,
		opretion_time, user_phone, user_type)
		values
		(#{userId,jdbcType=BIGINT},
		#{custCode,jdbcType=VARCHAR},
		#{orgCode,jdbcType=VARCHAR},
		#{userName,jdbcType=VARCHAR},
		#{userOldName,jdbcType=VARCHAR},
		#{realName,jdbcType=VARCHAR},
		#{userPasswd,jdbcType=VARCHAR},
		#{userIdentity,jdbcType=VARCHAR},
		#{loginIp,jdbcType=VARCHAR},
		#{loginTime,jdbcType=TIMESTAMP},
		#{userStatus,jdbcType=INTEGER},
		#{delStatus,jdbcType=INTEGER},
		#{recordTime,jdbcType=TIMESTAMP},
		#{entryUserId,jdbcType=BIGINT},
		#{operationUserId,jdbcType=BIGINT},
		#{opretionTime,jdbcType=TIMESTAMP}, #{userPhone,jdbcType=VARCHAR},
		#{userType,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.bec.cloud.baodanxitong.web.auth.model.AuthUser">
		<selectKey keyProperty="userId" order="BEFORE" resultType="java.lang.Long">
			select nextval('auth_user_id_seq')
		</selectKey>
		insert into public.auth_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="custCode != null">
				cust_code,
			</if>
			<if test="orgCode != null">
				org_code,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userOldName != null">
				user_old_name,
			</if>
			<if test="realName != null">
				real_name,
			</if>
			<if test="userPasswd != null">
				user_passwd,
			</if>
			<if test="userIdentity != null">
				user_identity,
			</if>
			<if test="loginIp != null">
				login_ip,
			</if>
			<if test="loginTime != null">
				login_time,
			</if>
			<if test="userStatus != null">
				user_status,
			</if>
			<if test="delStatus != null">
				del_status,
			</if>
			<if test="recordTime != null">
				record_time,
			</if>
			<if test="entryUserId != null">
				entry_user_id,
			</if>
			<if test="operationUserId != null">
				operation_user_id,
			</if>
			<if test="opretionTime != null">
				opretion_time,
			</if>
			<if test="userPhone != null">
				user_phone,
			</if>
			<if test="userType != null">
				user_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="custCode != null">
				#{custCode,jdbcType=VARCHAR},
			</if>
			<if test="orgCode != null">
				#{orgCode,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userOldName != null">
				#{userOldName,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				#{realName,jdbcType=VARCHAR},
			</if>
			<if test="userPasswd != null">
				#{userPasswd,jdbcType=VARCHAR},
			</if>
			<if test="userIdentity != null">
				#{userIdentity,jdbcType=VARCHAR},
			</if>
			<if test="loginIp != null">
				#{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="loginTime != null">
				#{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userStatus != null">
				#{userStatus,jdbcType=INTEGER},
			</if>
			<if test="delStatus != null">
				#{delStatus,jdbcType=INTEGER},
			</if>
			<if test="recordTime != null">
				#{recordTime,jdbcType=TIMESTAMP},
			</if>
			<if test="entryUserId != null">
				#{entryUserId,jdbcType=BIGINT},
			</if>
			<if test="operationUserId != null">
				#{operationUserId,jdbcType=BIGINT},
			</if>
			<if test="opretionTime != null">
				#{opretionTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userPhone != null">
				#{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.bec.cloud.baodanxitong.web.auth.model.AuthUser">
		update public.auth_user
		<set>
			<if test="custCode != null">
				cust_code = #{custCode,jdbcType=VARCHAR},
			</if>
			<if test="orgCode != null">
				org_code = #{orgCode,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userOldName != null">
				user_old_name = #{userOldName,jdbcType=VARCHAR},
			</if>
			<if test="realName != null">
				real_name = #{realName,jdbcType=VARCHAR},
			</if>
			<if test="userPasswd != null">
				user_passwd = #{userPasswd,jdbcType=VARCHAR},
			</if>
			<if test="userIdentity != null">
				user_identity = #{userIdentity,jdbcType=VARCHAR},
			</if>
			<if test="loginIp != null">
				login_ip = #{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="loginTime != null">
				login_time = #{loginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userStatus != null">
				user_status = #{userStatus,jdbcType=INTEGER},
			</if>
			<if test="delStatus != null">
				del_status = #{delStatus,jdbcType=INTEGER},
			</if>
			<if test="recordTime != null">
				record_time = #{recordTime,jdbcType=TIMESTAMP},
			</if>
			<if test="entryUserId != null">
				entry_user_id = #{entryUserId,jdbcType=BIGINT},
			</if>
			<if test="operationUserId != null">
				operation_user_id = #{operationUserId,jdbcType=BIGINT},
			</if>
			<if test="opretionTime != null">
				opretion_time = #{opretionTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userPhone != null">
				user_phone = #{userPhone,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				user_type = #{userType,jdbcType=INTEGER},
			</if>
		</set>
		where user_id = #{userId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.bec.cloud.baodanxitong.web.auth.model.AuthUser">
		update
		public.auth_user
		set cust_code = #{custCode,jdbcType=VARCHAR},
		org_code
		= #{orgCode,jdbcType=VARCHAR},
		user_name =
		#{userName,jdbcType=VARCHAR},
		user_old_name =
		#{userOldName,jdbcType=VARCHAR},
		real_name =
		#{realName,jdbcType=VARCHAR},
		user_passwd =
		#{userPasswd,jdbcType=VARCHAR},
		user_identity =
		#{userIdentity,jdbcType=VARCHAR},
		login_ip =
		#{loginIp,jdbcType=VARCHAR},
		login_time =
		#{loginTime,jdbcType=TIMESTAMP},
		user_status =
		#{userStatus,jdbcType=INTEGER},
		del_status =
		#{delStatus,jdbcType=INTEGER},
		record_time =
		#{recordTime,jdbcType=TIMESTAMP},
		entry_user_id =
		#{entryUserId,jdbcType=BIGINT},
		operation_user_id =
		#{operationUserId,jdbcType=BIGINT},
		opretion_time =
		#{opretionTime,jdbcType=TIMESTAMP},
		user_phone =
		#{userPhone,jdbcType=VARCHAR},
		user_type = #{userType,jdbcType=INTEGER}
		where user_id = #{userId,jdbcType=BIGINT}
	</update>

	<!-- 查询用户列表 -->
	<select id="selectAuthUser" resultMap="DetailResultMap"
		parameterType="com.bec.cloud.baodanxitong.web.auth.model.AuthUser">
		select
		u.user_id, u.cust_code, u.org_code, u.user_name,
		u.user_old_name,
		u.real_name,
		u.user_passwd, u.user_identity,
		u.login_ip, u.login_time,
		u.user_status, u.del_status, u.record_time,
		u.entry_user_id,
		u.operation_user_id,
		u.opretion_time,
		u.user_phone,u.user_type,
		case u.user_status when 0 then '正常' when 1
		then '禁用' else '' end
		userStatusName,
		array_to_string(group_concat(r.role_name),',')
		roleNames
		<if test="searchName != null and searchName !='' ">
			,#{searchName} searchName
		</if>
		from public.auth_user u
		left join
		public.auth_user_role ur on
		u.user_id=ur.user_id and ur.del_status=0
		and ur.status=0
		left join
		public.auth_role r on ur.role_id=r.role_id and
		r.del_status=0 and
		r.role_status=0
		<where>
			u.del_status =0
			<if test="userStatus != null">
				and u.user_status = #{userStatus,jdbcType=INTEGER}
			</if>
			<if test="searchName != null and searchName !='' ">
				and (u.user_name||u.real_name like
				'%'||#{searchName,jdbcType=VARCHAR}||'%')
			</if>

			<if test="userId != null">
				and u.user_id = #{userId,jdbcType=BIGINT}
			</if>
			<if test="custCode != null">
				and u.cust_code = #{custCode,jdbcType=VARCHAR}
			</if>
			<if test="orgCode != null">
				and u.org_code = #{orgCode,jdbcType=VARCHAR}
			</if>
			<if test="userName != null">
				and u.user_name = #{userName,jdbcType=VARCHAR}
			</if>
			<if test="userOldName != null">
				and u.user_old_name = #{userOldName,jdbcType=VARCHAR}
			</if>
			<if test="realName != null">
				and u.real_name = #{realName,jdbcType=VARCHAR}
			</if>
			<if test="userPasswd != null">
				and u.user_passwd = #{userPasswd,jdbcType=VARCHAR}
			</if>
			<if test="userIdentity != null">
				and u.user_identity = #{userIdentity,jdbcType=VARCHAR}
			</if>
			<if test="loginIp != null">
				and u.login_ip = #{loginIp,jdbcType=VARCHAR}
			</if>
			<if test="loginTime != null">
				and u.login_time = #{loginTime,jdbcType=TIMESTAMP}
			</if>
			<if test="recordTime != null">
				and u.record_time = #{recordTime,jdbcType=TIMESTAMP}
			</if>
			<if test="entryUserId != null">
				and u.entry_user_id = #{entryUserId,jdbcType=BIGINT}
			</if>
			<if test="operationUserId != null">
				and u.operation_user_id =
				#{operationUserId,jdbcType=BIGINT}
			</if>
			<if test="opretionTime != null">
				and u.opretion_time = #{opretionTime,jdbcType=TIMESTAMP}
			</if>
			<if test="userPhone != null">
				and u.user_phone = #{userPhone,jdbcType=VARCHAR}
			</if>
			<if test="userType != null">
				and user_type = #{userType,jdbcType=INTEGER}
			</if>
		</where>
		group by u.user_id, u.cust_code, u.org_code, u.user_name,
		u.user_old_name,
		u.real_name,
		u.user_passwd, u.user_identity,
		u.login_ip, u.login_time,
		u.user_status, u.del_status, u.record_time,
		u.entry_user_id,
		u.operation_user_id,
		u.opretion_time,
		u.user_phone,u.user_type
		order by user_id
	</select>
	<delete id="deleteUserRole" parameterType="java.lang.Long">
		delete from
		public.auth_user_role
		where user_id = #{userId,jdbcType=BIGINT}
	</delete>
	<insert id="saveUserRole" parameterType="map">
		insert into public.auth_user_role (user_id, role_id)
		values
		<foreach item="roleId" collection="roleIdList" index="index"
			separator=",">
			(#{userId},#{roleId})
		</foreach>
	</insert>
</mapper>