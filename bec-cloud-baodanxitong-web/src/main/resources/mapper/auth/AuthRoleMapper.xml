<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bec.cloud.baodanxitong.web.auth.dao.AuthRoleMapper">
	<resultMap id="BaseResultMap"
		type="com.bec.cloud.baodanxitong.web.auth.model.AuthRole">
		<id column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="role_pid" property="rolePid" jdbcType="INTEGER" />
		<result column="org_code" property="orgCode" jdbcType="VARCHAR" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="role_code" property="roleCode" jdbcType="VARCHAR" />
		<result column="role_status" property="roleStatus" jdbcType="INTEGER" />
		<result column="del_status" property="delStatus" jdbcType="INTEGER" />
		<result column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
		<result column="entry_user_id" property="entryUserId" jdbcType="BIGINT" />
		<result column="operation_user_id" property="operationUserId"
			jdbcType="BIGINT" />
		<result column="operation_time" property="operationTime"
			jdbcType="TIMESTAMP" />
		<result column="role_type" property="roleType" jdbcType="INTEGER" />
		<result column="cust_code" property="custCode" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="DetailResultMap"
		type="com.bec.cloud.baodanxitong.web.auth.model.AuthRole">
		<id column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="role_pid" property="rolePid" jdbcType="INTEGER" />
		<result column="org_code" property="orgCode" jdbcType="VARCHAR" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
		<result column="role_code" property="roleCode" jdbcType="VARCHAR" />
		<result column="role_status" property="roleStatus" jdbcType="INTEGER" />
		<result column="del_status" property="delStatus" jdbcType="INTEGER" />
		<result column="record_time" property="recordTime" jdbcType="TIMESTAMP" />
		<result column="entry_user_id" property="entryUserId" jdbcType="BIGINT" />
		<result column="operation_user_id" property="operationUserId"
			jdbcType="BIGINT" />
		<result column="operation_time" property="operationTime"
			jdbcType="TIMESTAMP" />
		<result column="role_type" property="roleType" jdbcType="INTEGER" />
		<result column="cust_code" property="custCode" jdbcType="VARCHAR" />

		<result column="userName" property="userName" jdbcType="VARCHAR" />
		<result column="realName" property="realName" jdbcType="VARCHAR" />
		<result column="searchName" property="searchName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		role_id, role_pid, org_code, role_name, role_code,
		role_status, del_status,
		record_time,
		entry_user_id, operation_user_id,
		operation_time, role_type, cust_code
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from public.auth_role
		where role_id = #{roleId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		public.auth_role
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.bec.cloud.baodanxitong.web.auth.model.AuthRole">
		<selectKey resultType="java.lang.Integer" keyProperty="roleId"
			order="BEFORE">
			select nextval('auth_role_id_seq')
		</selectKey>
		insert into public.auth_role (role_id, role_pid, org_code,
		role_name,
		role_code, role_status,
		del_status, record_time, entry_user_id,
		operation_user_id, operation_time, role_type,
		cust_code
		)
		values
		(#{roleId,jdbcType=INTEGER}, #{rolePid,jdbcType=INTEGER},
		#{orgCode,jdbcType=VARCHAR},
		#{roleName,jdbcType=VARCHAR},
		#{roleCode,jdbcType=VARCHAR}, #{roleStatus,jdbcType=INTEGER},
		#{delStatus,jdbcType=INTEGER}, #{recordTime,jdbcType=TIMESTAMP},
		#{entryUserId,jdbcType=BIGINT},
		#{operationUserId,jdbcType=BIGINT},
		#{operationTime,jdbcType=TIMESTAMP}, #{roleType,jdbcType=INTEGER},
		#{custCode,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.bec.cloud.baodanxitong.web.auth.model.AuthRole">
		<selectKey resultType="java.lang.Integer" keyProperty="roleId"
			order="BEFORE">
			select nextval('auth_role_id_seq')
		</selectKey>
		insert into public.auth_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			role_id,
			<if test="rolePid != null">
				role_pid,
			</if>
			<if test="orgCode != null">
				org_code,
			</if>
			<if test="roleName != null">
				role_name,
			</if>
			<if test="roleCode != null">
				role_code,
			</if>
			<if test="roleStatus != null">
				role_status,
			</if>
			<if test="delStatus != null">
				del_status,
			</if>
			<if test="recordTime != null">
				record_time,
			</if>
			<if test="entryUserId != null">
				entry_user_id,
			</if>
			<if test="operationUserId != null">
				operation_user_id,
			</if>
			<if test="operationTime != null">
				operation_time,
			</if>
			<if test="roleType != null">
				role_type,
			</if>
			<if test="custCode != null">
				cust_code,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			#{roleId,jdbcType=INTEGER},
			<if test="rolePid != null">
				#{rolePid,jdbcType=INTEGER},
			</if>
			<if test="orgCode != null">
				#{orgCode,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				#{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleCode != null">
				#{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="roleStatus != null">
				#{roleStatus,jdbcType=INTEGER},
			</if>
			<if test="delStatus != null">
				#{delStatus,jdbcType=INTEGER},
			</if>
			<if test="recordTime != null">
				#{recordTime,jdbcType=TIMESTAMP},
			</if>
			<if test="entryUserId != null">
				#{entryUserId,jdbcType=BIGINT},
			</if>
			<if test="operationUserId != null">
				#{operationUserId,jdbcType=BIGINT},
			</if>
			<if test="operationTime != null">
				#{operationTime,jdbcType=TIMESTAMP},
			</if>
			<if test="roleType != null">
				#{roleType,jdbcType=INTEGER},
			</if>
			<if test="custCode != null">
				#{custCode,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.bec.cloud.baodanxitong.web.auth.model.AuthRole">
		update public.auth_role
		<set>
			<if test="rolePid != null">
				role_pid = #{rolePid,jdbcType=INTEGER},
			</if>
			<if test="orgCode != null">
				org_code = #{orgCode,jdbcType=VARCHAR},
			</if>
			<if test="roleName != null">
				role_name = #{roleName,jdbcType=VARCHAR},
			</if>
			<if test="roleCode != null">
				role_code = #{roleCode,jdbcType=VARCHAR},
			</if>
			<if test="roleStatus != null">
				role_status = #{roleStatus,jdbcType=INTEGER},
			</if>
			<if test="delStatus != null">
				del_status = #{delStatus,jdbcType=INTEGER},
			</if>
			<if test="recordTime != null">
				record_time = #{recordTime,jdbcType=TIMESTAMP},
			</if>
			<if test="entryUserId != null">
				entry_user_id = #{entryUserId,jdbcType=BIGINT},
			</if>
			<if test="operationUserId != null">
				operation_user_id = #{operationUserId,jdbcType=BIGINT},
			</if>
			<if test="operationTime != null">
				operation_time = #{operationTime,jdbcType=TIMESTAMP},
			</if>
			<if test="roleType != null">
				role_type = #{roleType,jdbcType=INTEGER},
			</if>
			<if test="custCode != null">
				cust_code = #{custCode,jdbcType=VARCHAR},
			</if>
		</set>
		where role_id = #{roleId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.bec.cloud.baodanxitong.web.auth.model.AuthRole">
		update
		public.auth_role
		set role_pid = #{rolePid,jdbcType=INTEGER},
		org_code =
		#{orgCode,jdbcType=VARCHAR},
		role_name = #{roleName,jdbcType=VARCHAR},
		role_code = #{roleCode,jdbcType=VARCHAR},
		role_status =
		#{roleStatus,jdbcType=INTEGER},
		del_status =
		#{delStatus,jdbcType=INTEGER},
		record_time =
		#{recordTime,jdbcType=TIMESTAMP},
		entry_user_id =
		#{entryUserId,jdbcType=BIGINT},
		operation_user_id =
		#{operationUserId,jdbcType=BIGINT},
		operation_time =
		#{operationTime,jdbcType=TIMESTAMP},
		role_type =
		#{roleType,jdbcType=INTEGER},
		cust_code = #{custCode,jdbcType=VARCHAR}
		where role_id =
		#{roleId,jdbcType=INTEGER}

	</update>

	<select id="selectAuthRoleByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		r.*
		from public.auth_role r
		inner join
		public.auth_user_role ur on r.role_id=ur.role_id and ur.del_status=0
		and ur.status=0
		where ur.user_id = #{userId,jdbcType=BIGINT} and
		r.del_status=0 and r.role_status=0
		order by r.role_id
	</select>
	<select id="selectAuthRole" resultMap="DetailResultMap"
		parameterType="com.bec.cloud.baodanxitong.web.auth.model.AuthRole">
		select
		r.*, u.user_name userName, u.real_name realName
		<if test="searchName != null and searchName !='' ">
			,#{searchName} searchName
		</if>
		from public.auth_role r
		left join
		public.auth_user u on
		u.user_id=r.entry_user_id and u.del_status=0 and
		u.user_status=0
		<where>
			r.del_status=0
			<if test="searchName != null and searchName !='' ">
				and (u.user_name||u.real_name like
				'%'||#{searchName,jdbcType=VARCHAR}||'%')
			</if>
			<if test="roleName != null">
				and r.role_name like '%'||#{roleName,jdbcType=VARCHAR}||'%'
			</if>

			<if test="roleId != null">
				and r.role_id = #{roleId,jdbcType=INTEGER}
			</if>
			<if test="rolePid != null">
				and r.role_pid = #{rolePid,jdbcType=INTEGER}
			</if>
			<if test="orgCode != null">
				and r.org_code = #{orgCode,jdbcType=VARCHAR}
			</if>
			<if test="roleCode != null">
				and r.role_code = #{roleCode,jdbcType=VARCHAR}
			</if>
			<if test="roleStatus != null">
				and r.role_status = #{roleStatus,jdbcType=INTEGER}
			</if>
			<if test="recordTime != null">
				and r.record_time = #{recordTime,jdbcType=TIMESTAMP}
			</if>
			<if test="entryUserId != null">
				and r.entry_user_id = #{entryUserId,jdbcType=BIGINT}
			</if>
			<if test="operationUserId != null">
				and r.operation_user_id =
				#{operationUserId,jdbcType=BIGINT}
			</if>
			<if test="operationTime != null">
				and r.operation_time = #{operationTime,jdbcType=TIMESTAMP}
			</if>
			<if test="roleType != null">
				and r.role_type = #{roleType,jdbcType=INTEGER}
			</if>
		</where>
		order by r.role_id
	</select>
	<delete id="deleteRoleMenuBtn" parameterType="java.lang.Integer">
		delete from
		public.auth_role_menu_btn
		where role_id = #{roleId,jdbcType=INTEGER}
	</delete>
	<insert id="saveRoleMenuBtn">
		insert into public.auth_role_menu_btn (role_id, menu_id, btn_id)
		values
		<foreach item="item" collection="list" index="index"
			separator=",">
			(#{item.roleId},#{item.menuId},#{item.btnId})
		</foreach>
	</insert>
	<select id="selectMenuBtnByRoleId" resultType="map"
		parameterType="java.lang.Integer">
		select
		rmb.menu_id menuId,rmb.btn_id btnId
		from
		public.auth_role_menu_btn rmb
		where rmb.role_id =
		#{roleId,jdbcType=INTEGER} and
		rmb.status=0 and rmb.del_status=0
		order
		by rmb.menu_id,rmb.btn_id
	</select>
</mapper>